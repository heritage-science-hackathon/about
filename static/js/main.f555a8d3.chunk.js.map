{"version":3,"sources":["logo.svg","Nav.js","Intro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","menu","children","className","href","NavItem","_ref","logo","react_default","a","createElement","concat","src","Nav","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","map","item","Nav_NavItem","Component","Intro","App","src_Nav","src_Intro","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uKCElCC,SAAO,CACX,CACEC,SAAU,QACVC,UAAW,kBACXC,KAAM,cAER,CACEF,SAAU,iBACVC,UAAW,kBACXC,KAAM,cAER,CACEF,SAAU,UACVC,UAAW,kBACXC,KAAM,gBAER,CACEF,SAAU,MACVC,UAAW,kBACXC,KAAM,gBAER,CACEF,SAAU,UACVC,UAAW,kBACXC,KAAM,kBAKJC,EAAU,SAAAC,GAAA,IAAEH,EAAFG,EAAEH,UAAWC,EAAbE,EAAaF,KAAMG,EAAnBD,EAAmBC,KAAML,EAAzBI,EAAyBJ,SAAzB,OACdM,EAAAC,EAAAC,cAAA,MAAIP,UAAS,qBAAAQ,OAAuBR,IAClCK,EAAAC,EAAAC,cAAA,KAAGP,UAAU,qBAAqBC,KAAMA,GACrCG,EAAOC,EAAAC,EAAAC,cAAA,OAAKE,IAAI,qBAAqBT,UAAU,mBAAsBD,KAqB7DW,cAfb,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACZH,0EAGN,OACEN,EAAAC,EAAAC,cAAA,OAAKP,UAAU,yBACbK,EAAAC,EAAAC,cAAA,MAAIP,UAAU,2EACXF,EAAKoB,IAAI,SAAAC,GAAI,OAAId,EAAAC,EAAAC,cAACa,EAAYD,cARvBE,aChBHC,cAnBb,SAAAA,EAAYX,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAQ,GAAAV,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAU,GAAAL,KAAAH,KACZH,0EAGN,OACEN,EAAAC,EAAAC,cAAA,OAAKP,UAAU,2CACbK,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,OAAKP,UAAU,2BAAf,2NAGAK,EAAAC,EAAAC,cAAA,yGAXYc,aCqBLE,0LAfX,OACElB,EAAAC,EAAAC,cAAA,OAAKP,UAAU,OACbK,EAAAC,EAAAC,cAAA,OAAKP,UAAU,qDACbK,EAAAC,EAAAC,cAAA,OAAKP,UAAU,qBAAqBS,IAAI,4BAE1CJ,EAAAC,EAAAC,cAAA,OAAKP,UAAU,mDACbK,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,eATQJ,cCKEK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f555a8d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nconst menu = [\n  {\n    children: 'About',\n    className: 'order-1-ns w-20',\n    href: 'about.html'\n  },\n  {\n    children: 'Call for ideas',\n    className: 'order-2-ns w-20',\n    href: 'ideas.html'\n  },\n  {\n    children: 'Tickets',\n    className: 'order-2-ns w-20',\n    href: 'tickets.html'\n  },\n  {\n    children: 'Map',\n    className: 'order-3-ns w-20',\n    href: 'journal.html'\n  },\n  {\n    children: 'Contact',\n    className: 'order-4-ns w-20',\n    href: 'contact.html'\n  }\n];\n\n\nconst NavItem = ({className, href, logo, children}) => (\n  <li className={`mh2-ns f6 f4-l tc ${className}`}>\n    <a className=\"white no-underline\" href={href}>\n      {logo ? <img src=\"../images/logo.svg\" className=\"db center logo\" /> : children}\n    </a>\n  </li>\n);\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render () {\n    return (\n      <nav className=\"pt3 pt4-ns mb4 mb0-ns\">\n        <ul className=\"list flex flex-wrap flex-nowrap-ns justify-between items-center pa0 ma0\">\n          {menu.map(item => <NavItem {...item} />)}\n        </ul>\n      </nav>      \n    )\n  }\n}\n\n\nexport default Nav","import React, { Component } from 'react';\n\n\nclass Intro extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render () {\n    return (\n      <div className=\"m-auto-ns f4 f3-m f3-l tc w-80-l normal\">\n        <h1>&lt; Heritage Science Hackathon /&gt;</h1>\n        <div className=\"f4 f3-m f3-l mb3 mb4-ns\">\n          Join us at Here East for a Heritage Science Hackathon. Team up with a broad range of heritage professionals, early career researchers, programmers and students to work on issues faced by local heritage institutions. \n        </div>\n        <div>\n          Use new technology and find new ways to present heritage science to new audiences. \n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Intro","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Nav from './Nav'\nimport Intro from './Intro'\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"side-image fixed vh-100 w-50 dn-m overflow-hidden\">\n          <img className=\"dn-m h-100 mw-none\" src=\"./images/computer.jpeg\" />\n        </div>\n        <div className=\"min-vh-100 ph4 w-50-l relative flex flex-column\">\n          <Nav />\n          <Intro />\n         \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}